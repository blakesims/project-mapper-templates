<?xml version='1.0' encoding='utf-8'?>
<project-rules>
  <code-rules>
    <file-documentation>
      <file-level-docstring>
                """
                {Clear one-line statement of this file's purpose}

                Key Components:
                    {ClassName}: {What this class does and why it exists}
                    {function_name}(): {What this function does and why it's needed}

                File Dependencies:
                    This file uses: {OtherComponent}: {Why it's used}
                    This file is used by: {OtherComponent}: {Why it's needed}
                """
            </file-level-docstring>
      <example>
                ```python
                """
                Manages XML documentation updates for project structure.

                Key Components:
                    XMLManager: Handles reading and writing of .cursorrules XML file
                    update_rules(): Updates documentation while preserving existing rules

                File Dependencies:
                    This file uses: ProjectScanner: To get current project structure
                    This file is used by: CLI: To execute documentation updates
                """
                
                class XMLManager:
                    ...
                ```
            </example>
    </file-documentation>
    <documentation-maintenance>
      <llm-instructions>
                Before modifying ANY file, you MUST:
                1. Read the current file-level docstring
                2. Decide if your changes affect the documentation
                3. Output your decision in this format:

                Documentation Decision:
                - Update Required: Yes/No
                - Reason: One clear sentence explaining why/why not
              - Changes Needed: [If Yes] What needs to be updated

              Actions Taken:
              -If "Yes" above, include the docstring edits in your file edits
            </llm-instructions>
      <update-triggers>
                Check if your changes involve:
                - File's main purpose changing
                - New/modified classes or functions
                - Changes to what this file uses
                - Changes to what uses this file
            </update-triggers>
    </documentation-maintenance>
    <workflow>
      <steps>
                1. READ current file-level docstring
                2. OUTPUT documentation decision
                3. MAKE code changes
                4. UPDATE docstring if needed
            </steps>
    </workflow>
  </code-rules>
  <project-map>
    <structure></structure>
    <relationships>
      <flow description="Project documentation flow">Documentation maintained by LLM based on code analysis</flow>
    </relationships>
  </project-map>
</project-rules> 
